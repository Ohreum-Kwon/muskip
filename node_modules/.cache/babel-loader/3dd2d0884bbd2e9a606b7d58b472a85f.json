{"ast":null,"code":"var _jsxFileName = \"/Users/ohreumkwon/Desktop/React/muskip/src/components/LoadingToRedirect.js\";\n//this page handles to show a page is redirecting something for user\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nconst LoadingToRedirect = () => {\n  const [count, setCount] = useState(5);\n  const navigate = useHistory();\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCount(currentCount => --currentCount);\n    }, 1000);\n    count === 0 && navigate.push(\"/login\");\n    return () => clearInterval(interval);\n  }, [count, navigate]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, \"Redirecting you in \", count, \" seconds\"));\n};\n\nexport default LoadingToRedirect;","map":{"version":3,"sources":["/Users/ohreumkwon/Desktop/React/muskip/src/components/LoadingToRedirect.js"],"names":["React","useState","useEffect","useHistory","LoadingToRedirect","count","setCount","navigate","interval","setInterval","currentCount","push","clearInterval"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,SAAQC,UAAR,QAA0B,kBAA1B;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAqBL,QAAQ,CAAC,CAAD,CAAnC;AACA,QAAMM,QAAQ,GAAGJ,UAAU,EAA3B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMM,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAC/BH,MAAAA,QAAQ,CAAEI,YAAD,IAAkB,EAAEA,YAArB,CAAR;AACH,KAF2B,EAEzB,IAFyB,CAA5B;AAIAL,IAAAA,KAAK,KAAK,CAAV,IAAeE,QAAQ,CAACI,IAAT,CAAc,QAAd,CAAf;AACA,WAAO,MAAMC,aAAa,CAACJ,QAAD,CAA1B;AACH,GAPQ,EAON,CAACH,KAAD,EAAQE,QAAR,CAPM,CAAT;AAQA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAuBF,KAAvB,aADJ,CADJ;AAKH,CAjBD;;AAmBA,eAAeD,iBAAf","sourcesContent":["//this page handles to show a page is redirecting something for user\nimport React, {useState, useEffect } from 'react'\nimport {useHistory } from \"react-router-dom\"\n\nconst LoadingToRedirect = () => {\n    const [count, setCount ] = useState(5);\n    const navigate = useHistory();\n    \n    useEffect(() => {\n        const interval = setInterval(() => {\n            setCount((currentCount) => --currentCount);\n        }, 1000)\n\n        count === 0 && navigate.push(\"/login\")\n        return () => clearInterval(interval)\n    }, [count, navigate])\n    return (\n        <div>\n            <p>Redirecting you in {count} seconds</p>\n        </div>\n    )\n}\n\nexport default LoadingToRedirect\n"]},"metadata":{},"sourceType":"module"}