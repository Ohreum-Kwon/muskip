{"ast":null,"code":"var _jsxFileName = \"/Users/ohreumkwon/Desktop/React/muskip/src/Body.js\";\nimport React from \"react\";\nimport \"./Body.css\";\nimport { useStateValue } from \"./StateProvider\";\nimport SongRow from \"./SongRow\";\n\nfunction Body({\n  spotify\n}, state) {\n  const [{\n    playlist\n  }, dispatch] = useStateValue();\n\n  const playPlaylist = id => {\n    spotify.play({\n      context_uri: `spotify:playlist:5LnhXaBy0eDgaoRGe7zm2L`\n    }).then(res => {\n      spotify.getMyCurrentPlayingTrack().then(r => {\n        dispatch({\n          type: \"SET_ITEM\",\n          item: r.item\n        });\n        dispatch({\n          type: \"SET_PLAYING\",\n          playing: true\n        });\n      });\n    });\n  };\n\n  const playSong = id => {\n    spotify.play({\n      uris: [`spotify:track:${id}`]\n    }).then(res => {\n      spotify.getMyCurrentPlayingTrack().then(r => {\n        dispatch({\n          type: \"SET_ITEM\",\n          item: r.item\n        });\n        dispatch({\n          type: \"SET_PLAYING\",\n          playing: true\n        });\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"body__songs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, playlist === null || playlist === void 0 ? void 0 : playlist.tracks.items.map(item => /*#__PURE__*/React.createElement(SongRow, {\n    playSong: playSong,\n    track: item.track,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }))));\n}\n\nexport default Body;","map":{"version":3,"sources":["/Users/ohreumkwon/Desktop/React/muskip/src/Body.js"],"names":["React","useStateValue","SongRow","Body","spotify","state","playlist","dispatch","playPlaylist","id","play","context_uri","then","res","getMyCurrentPlayingTrack","r","type","item","playing","playSong","uris","tracks","items","map","track"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAA2BC,KAA3B,EAAmC;AACjC,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAeC,QAAf,IAA2BN,aAAa,EAA9C;;AAEA,QAAMO,YAAY,GAAIC,EAAD,IAAQ;AAC3BL,IAAAA,OAAO,CACJM,IADH,CACQ;AACJC,MAAAA,WAAW,EAAG;AADV,KADR,EAIGC,IAJH,CAISC,GAAD,IAAS;AACbT,MAAAA,OAAO,CAACU,wBAAR,GAAmCF,IAAnC,CAAyCG,CAAD,IAAO;AAC7CR,QAAAA,QAAQ,CAAC;AACPS,UAAAA,IAAI,EAAE,UADC;AAEPC,UAAAA,IAAI,EAAEF,CAAC,CAACE;AAFD,SAAD,CAAR;AAIAV,QAAAA,QAAQ,CAAC;AACPS,UAAAA,IAAI,EAAE,aADC;AAEPE,UAAAA,OAAO,EAAE;AAFF,SAAD,CAAR;AAID,OATD;AAUD,KAfH;AAgBD,GAjBD;;AAmBA,QAAMC,QAAQ,GAAIV,EAAD,IAAQ;AACvBL,IAAAA,OAAO,CACJM,IADH,CACQ;AACJU,MAAAA,IAAI,EAAE,CAAE,iBAAgBX,EAAG,EAArB;AADF,KADR,EAIGG,IAJH,CAISC,GAAD,IAAS;AACbT,MAAAA,OAAO,CAACU,wBAAR,GAAmCF,IAAnC,CAAyCG,CAAD,IAAO;AAC7CR,QAAAA,QAAQ,CAAC;AACPS,UAAAA,IAAI,EAAE,UADC;AAEPC,UAAAA,IAAI,EAAEF,CAAC,CAACE;AAFD,SAAD,CAAR;AAIAV,QAAAA,QAAQ,CAAC;AACPS,UAAAA,IAAI,EAAE,aADC;AAEPE,UAAAA,OAAO,EAAE;AAFF,SAAD,CAAR;AAID,OATD;AAUD,KAfH;AAgBD,GAjBD;;AAmBA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGZ,QADH,aACGA,QADH,uBACGA,QAAQ,CAAEe,MAAV,CAAiBC,KAAjB,CAAuBC,GAAvB,CAA4BN,IAAD,iBAC1B,oBAAC,OAAD;AAAS,IAAA,QAAQ,EAAEE,QAAnB;AAA6B,IAAA,KAAK,EAAEF,IAAI,CAACO,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADJ,CADF;AASD;;AAED,eAAerB,IAAf","sourcesContent":["import React from \"react\";\nimport \"./Body.css\";\nimport { useStateValue } from \"./StateProvider\";\nimport SongRow from \"./SongRow\";\n\nfunction Body({ spotify }, state ) {\n  const [{ playlist }, dispatch] = useStateValue();\n\n  const playPlaylist = (id) => {\n    spotify\n      .play({\n        context_uri: `spotify:playlist:5LnhXaBy0eDgaoRGe7zm2L`,\n      })\n      .then((res) => {\n        spotify.getMyCurrentPlayingTrack().then((r) => {\n          dispatch({\n            type: \"SET_ITEM\",\n            item: r.item,\n          });\n          dispatch({\n            type: \"SET_PLAYING\",\n            playing: true,\n          });\n        });\n      });\n  };\n\n  const playSong = (id) => {\n    spotify\n      .play({\n        uris: [`spotify:track:${id}`],\n      })\n      .then((res) => {\n        spotify.getMyCurrentPlayingTrack().then((r) => {\n          dispatch({\n            type: \"SET_ITEM\",\n            item: r.item,\n          });\n          dispatch({\n            type: \"SET_PLAYING\",\n            playing: true,\n          });\n        });\n      });\n  };\n\n  return (\n    <div className=\"body\">\n        <div className=\"body__songs\">\n          {playlist?.tracks.items.map((item) => (\n            <SongRow playSong={playSong} track={item.track} />\n          ))}\n        </div>\n    </div>\n  );\n}\n\nexport default Body;\n"]},"metadata":{},"sourceType":"module"}